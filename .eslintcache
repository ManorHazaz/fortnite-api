[{"C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\index.js":"1","C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\App.js":"2","C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\reportWebVitals.js":"3","C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\components\\Weapon.js":"4","C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\components\\Modal.js":"5","C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\components\\Tag.js":"6","C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\components\\StatsTable.js":"7","C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\components\\Biggest.js":"8"},{"size":266,"mtime":1611837025227,"results":"9","hashOfConfig":"10"},{"size":1087,"mtime":1612097876400,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611830445204,"results":"12","hashOfConfig":"10"},{"size":1719,"mtime":1612083490934,"results":"13","hashOfConfig":"10"},{"size":2287,"mtime":1612083662252,"results":"14","hashOfConfig":"10"},{"size":168,"mtime":1612045584121,"results":"15","hashOfConfig":"10"},{"size":1405,"mtime":1612097232657,"results":"16","hashOfConfig":"10"},{"size":2936,"mtime":1612096149868,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"4ghdq3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\index.js",[],["38","39"],"C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\App.js",["40"],"C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\reportWebVitals.js",[],"C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\components\\Weapon.js",["41","42","43","44","45","46","47"],"import LightBullets from '../static/Light-bullets.png'; \r\nimport MediumBullets from '../static/Medium-bullets.png'; \r\nimport HeavyBullets from '../static/Heavy-bullets.png'; \r\nimport Modal from './Modal';\r\n\r\nfunction Weapon({weapon, toggleModel}) {\r\n\r\n    function bulletType(weapon) \r\n    {\r\n        const searchTag = weapon.searchTags;\r\n        \r\n        if(searchTag.includes(\"LightBullets\"))\r\n        {\r\n            return 'Light bullets';\r\n        }\r\n\r\n        if(searchTag.includes(\"MediumBullets\"))\r\n        {\r\n            return 'Medium bullets';\r\n        }\r\n\r\n        if(searchTag.includes(\"HeavyBullets\"))\r\n        {\r\n            return 'Heavy bullets';\r\n        }\r\n\r\n        return 'Unknown';\r\n    }\r\n\r\n    function bulletTypeImg(bulletType)\r\n    {\r\n        switch (bulletType) \r\n        {\r\n            case 'Light bullets':\r\n                return LightBullets;\r\n            break;\r\n\r\n            case 'Medium bullets':\r\n                return MediumBullets;\r\n            break;\r\n\r\n            case 'Heavy bullets':\r\n                return HeavyBullets;\r\n            break;\r\n        \r\n            default:\r\n                return LightBullets;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`weapon ${weapon.rarity}`} onClick={() => toggleModel(weapon) }>\r\n            <div className='weapon-data'>\r\n                <div className='name'>{ weapon.name }</div>\r\n                <div className='demege'>{ weapon.mainStats.DmgPB }</div>\r\n                <div className='bullet-type'>{ bulletType(weapon) }</div>\r\n            </div>\r\n            {console.log(weapon)}            \r\n            <img src={ weapon.images.icon }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weapon\r\n","C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\components\\Modal.js",["48"],"import {React ,useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport StatsTable from './StatsTable';\r\nimport Tag from './Tag';\r\n\r\nfunction Modal({modalIsOpen, modalData, toggleModel}) {\r\n    const [showDescription,setShowDescription] = useState(true);\r\n    const [showStats,setShowStats] = useState(false);\r\n\r\n    if(modalIsOpen)\r\n    {\r\n        const tags = modalData.searchTags.split(' ');\r\n\r\n        return ReactDOM.createPortal(\r\n            <>\r\n                <div className='overlay'></div>\r\n                <div className={`modal ${modalData.rarity}`}>\r\n                    <button className='exit-modal' onClick={ () => toggleModel() }> X </button>\r\n                    <div className='title'>\r\n                        <h2 className='name'>{ modalData.name }</h2>\r\n                        <div className='tags'>\r\n                            {tags.map(tag => \r\n                                <Tag key={tag} data={tag} />\r\n                            )}\r\n                        </div>\r\n                        <img className='weapon-img' src={ modalData.images.icon }/>\r\n                    </div>\r\n                    <div className='data'>\r\n                        <div className='tabs'>\r\n                            <span className={`tab ${showDescription && 'active'}`} onClick={() => !showDescription && setShowDescription(true) & setShowStats(false) }>Description</span>\r\n                            <span className={`tab ${showStats && 'active'}`} onClick={() => !showStats && setShowStats(true) & setShowDescription(false) }>Stats</span>   \r\n                        </div>\r\n                        { showDescription &&\r\n                            <div className='info description'>\r\n                                    {modalData.description}\r\n                            </div>\r\n                        }\r\n                        { showStats &&\r\n                            <div className='info stats' >\r\n                                <StatsTable key={modalData.id} stats={modalData.mainStats}/>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </>,\r\n            document.getElementById('modal-root')\r\n        )\r\n    }\r\n    else\r\n    return null\r\n}\r\n\r\nexport default Modal\r\n","C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\components\\Tag.js",[],"C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\components\\StatsTable.js",[],"C:\\Users\\Rami\\Desktop\\manor\\free man\\fortnite-api\\src\\components\\Biggest.js",["49","50"],"import { React , useState } from 'react';\r\n\r\nfunction Biggest({weapons}) {\r\n    const [DPS,setDPS] = useState(0);\r\n    const [DmgPB,setDmgPB] = useState(0);\r\n    const [FiringRate,setFiringRate] = useState(0);\r\n    const [ClipSize,setClipSize] = useState(0);\r\n    const [ReloadTime,setReloadTime] = useState(0);\r\n    const [BulletsPerCartridge,setBulletsPerCartridge] = useState(0);\r\n    const [Spread,setSpread] = useState(0);\r\n    const [SpreadDownsights,setSpreadDownsights] = useState(0);\r\n    const [DamageZoneCritical,setDamageZoneCritical] = useState(0);\r\n\r\n    function order() \r\n    {\r\n        weapons.map( weapon => \r\n        {\r\n            var tempDPS = weapon.mainStats['DmgPB'] * weapon.mainStats['FiringRate'];\r\n            if(tempDPS > DPS)\r\n            {\r\n                setDPS(tempDPS);\r\n            }\r\n\r\n            Object.entries(weapon.mainStats).map(([key, value]) =>\r\n            {\r\n                switch (key) {\r\n                    case 'DmgPB':\r\n                        value > DmgPB && setDmgPB(value)\r\n                        break;\r\n                \r\n                    case 'FiringRate':\r\n                        value > FiringRate && setFiringRate(value)\r\n                        break;\r\n                \r\n                    case 'ClipSize':\r\n                        value > ClipSize && setClipSize(value)\r\n                        break;\r\n                \r\n                    case 'ReloadTime':\r\n                        value > ReloadTime && setReloadTime(value)\r\n                        break;\r\n                \r\n                    case 'BulletsPerCartridge':\r\n                        value > BulletsPerCartridge && setBulletsPerCartridge(value)\r\n                        break;\r\n                \r\n                    case 'Spread':\r\n                        value > Spread && setSpread(value)\r\n                        break;\r\n                \r\n                    case 'SpreadDownsights':\r\n                        value > SpreadDownsights && setSpreadDownsights(value)\r\n                        break;\r\n                \r\n                    case 'DamageZoneCritical':\r\n                        value > DamageZoneCritical && setDamageZoneCritical(value)\r\n                        break;\r\n                \r\n                    default:\r\n                        break;\r\n                }\r\n            })\r\n        })\r\n        console.log('DPS',DPS)\r\n        console.log('DmgPB', DmgPB)\r\n        console.log('FiringRate', FiringRate)\r\n        console.log('ClipSize', ClipSize)\r\n        console.log('ReloadTime', ReloadTime)\r\n        console.log('BulletsPerCartridge', BulletsPerCartridge)\r\n        console.log('Spread', Spread)\r\n        console.log('SpreadDownsights', SpreadDownsights)\r\n        console.log('DamageZoneCritical', DamageZoneCritical)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                order()\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Biggest",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":15},{"ruleId":"55","severity":1,"message":"59","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":13},{"ruleId":"55","severity":1,"message":"60","line":30,"column":14,"nodeType":"57","messageId":"58","endLine":30,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":36,"column":13,"nodeType":"63","messageId":"64","endLine":36,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":40,"column":13,"nodeType":"63","messageId":"64","endLine":40,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":44,"column":13,"nodeType":"63","messageId":"64","endLine":44,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":48,"column":13,"nodeType":"63","messageId":"64","endLine":48,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":60,"column":13,"nodeType":"67","endLine":60,"endColumn":46},{"ruleId":"65","severity":1,"message":"66","line":26,"column":25,"nodeType":"67","endLine":26,"endColumn":84},{"ruleId":"68","severity":1,"message":"69","line":16,"column":29,"nodeType":"70","messageId":"71","endLine":16,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":24,"column":65,"nodeType":"70","messageId":"71","endLine":24,"endColumn":67},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Biggest' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'bulletTypeImg' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]